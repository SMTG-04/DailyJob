name: Android workflow
on:
  workflow_call:
    inputs:
      appium_port:
        required: true
        type: string
      test_config:
        required: true
        type: string
      test_name:
        required: true
        type: string

jobs:
  Android-Job:
    env:
      apiLevel: 32
      emuTag: google_apis
      arch: x86_64

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true
        name: Install node

      - run: |
          npm install -g appium
        name: Install appium
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'
        name: Setup Java

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: |
            $HOME/.android/cache
            $HOME/Android/Sdk
          key: android-sdk-$apiLevel
          restore-keys: |
            android-sdk-$apiLevel

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-ubuntu
          restore-keys: |
            npm-ubuntu

      - name: Cache AVD
        uses: actions/cache@v3
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-$apiLevel

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: emulator
          force-avd-creation: false
          api-level: $apiLevel
          disable-spellchecker: true
          target: $emuTag
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          arch: $arch
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Start Appium server
        run: |
          appium driver install uiautomator2
          appium driver doctor uiautomator2
          nohup appium -a 0.0.0.0 -p ${{ inputs.appium_port }} -pa /wd/hub > appium_log.txt 2>&1 &
          tail -f appium_log.txt &

      - name: Install dependencies
        run: |
          mvn install -DskipTests

      - name: Run Appium tests with Maven
        uses: reactivecircus/android-emulator-runner@v2
        with:
          script: |
            mvn test "-DsuiteFile=${{ inputs.test_config }}" "-Dudid=emulator-5554" "-DappiumPort=${{ inputs.appium_port }}"
          avd-name: emulator
          force-avd-creation: false
          api-level: $apiLevel
          disable-spellchecker: true
          target: $emuTag
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          arch: $arch
          disable-animations: true

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.test_name }} - MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.test_name }} - Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html