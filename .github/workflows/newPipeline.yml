name: Pipeline

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  CloneGit:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout the current repository
        uses: actions/checkout@v2

      - name: Install OpenVPN
        run: |
          sudo apt update -y
          sudo apt install -y openvpn

      - name: Create VPN Credentials File
        run: |
          echo "${{ secrets.VPN_USERNAME }}" > ${{ secrets.VPN_AUTHOR }}
          echo "${{ secrets.VPN_PASSWORD }}" >> ${{ secrets.VPN_AUTHOR }}
          chmod 600 ${{ secrets.VPN_AUTHOR }}

      - name: Start OpenVPN
        run: |
          sudo nohup openvpn --verb 4 --config $(pwd)/${{ secrets.VPN_OVPN }} --auth-user-pass $(pwd)/${{ secrets.VPN_AUTHOR }} > $HOME/openvpn.log 2>&1 &

      - name: Try connect to Gitlab by VPN
        run: |
          for i in {1..5}; do
           echo "$(curl -Is ${{ secrets.GITLAB_HOST }} | head -1)"
           if grep -q "Initialization Sequence Completed" $HOME/openvpn.log; then
             echo "OpenVPN started successfully."
             break
           fi
           echo "OpenVPN start failed, retrying..."
          done
          cat $HOME/openvpn.log

      - name: Clone GitLab repository
        run: |
          git clone ${{ secrets.GITLAB_REPOSITORY }} GoSELL-Automation

      - name: Stop OpenVPN
        run: |
          sudo pkill -f openvpn

      - uses: actions/upload-artifact@v4
        with:
          name: ClonedRepository
          path: GoSELL-Automation

  Dashboard-CreateProduct:
    runs-on: ubuntu-20.04
    needs: CloneGit

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          mvn --batch-mode test "-DsuiteFile=test_config/web/createProductTest.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation

  Dashboard-UpdateProduct:
    runs-on: ubuntu-20.04
    needs: CloneGit

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          mvn --batch-mode test "-DsuiteFile=test_config/web/updateProductTest.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation


  Dashboard-ProductManagement:
    runs-on: ubuntu-20.04
    needs: [ Dashboard-CreateProduct, Dashboard-UpdateProduct ]

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          mvn --batch-mode test "-DsuiteFile=test_config/web/productManagementTest.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation

  Storefront-ProductDetail-NormalxWithoutVariation:
    runs-on: ubuntu-20.04
    needs: CloneGit

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          mvn --batch-mode test "-DsuiteFile=test_config/web/productDetail_Normal_withoutVariation.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation

  Storefront-ProductDetail-IMEIxWithoutVariation:
    runs-on: ubuntu-20.04
    needs: CloneGit

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          run: mvn --batch-mode test "-DsuiteFile=test_config/web/productDetail_IMEI_withoutVariation.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation
  Storefront-ProductDetail-NormalxVariation:
    runs-on: ubuntu-20.04
    needs: CloneGit

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          run: mvn --batch-mode test "-DsuiteFile=test_config/web/productDetail_Normal_Variation.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation

  Storefront-ProductDetail-IMEIxVariation:
    runs-on: ubuntu-20.04
    needs: CloneGit

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          run: mvn --batch-mode test "-DsuiteFile=test_config/web/productDetail_IMEI_Variation.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation

  Storefront-ProductDetail-Promotion:
    runs-on: ubuntu-20.04
    needs: [ Storefront-ProductDetail-NormalxWithoutVariation, Storefront-ProductDetail-IMEIxWithoutVariation, Storefront-ProductDetail-NormalxVariation, Storefront-ProductDetail-IMEIxVariation ]

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ClonedRepository
          path: GoSELL-Automation

      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout GoSELL-Thang

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu

      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests

      - name: Run tests
        run: |
          cd GoSELL-Automation
          mvn --batch-mode test "-DsuiteFile=test_config/web/productDetail_combinePromotion.xml"

      - name: Upload all recording .mp4 files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MP4 Files
          path: '**/*.mp4'

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        run: |
          rm -r GoSELL-Automation

  CleanJob:
    runs-on: ubuntu-20.04
    needs: [ Dashboard-ProductManagement, Storefront-ProductDetail-Promotion ]
    steps:
      - name: Delete clone repository
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ClonedRepository